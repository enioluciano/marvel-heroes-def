// Mocks generated by Mockito 5.1.0 from annotations
// in project_test/test/characters/infra/datasources/mocks/datasource.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:project_test/app/pages/characters/infra/datasources/characters_datasource.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [CharactersDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharactersDataSource extends _i1.Mock
    implements _i2.CharactersDataSource {
  MockCharactersDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<dynamic>> getListCharacters(String? aditional) =>
      (super.noSuchMethod(Invocation.method(#getListCharacters, [aditional]),
              returnValue: Future<List<dynamic>>.value(<dynamic>[]))
          as _i3.Future<List<dynamic>>);
  @override
  _i3.Future<List<dynamic>> getListComics(int? id) =>
      (super.noSuchMethod(Invocation.method(#getListComics, [id]),
              returnValue: Future<List<dynamic>>.value(<dynamic>[]))
          as _i3.Future<List<dynamic>>);
}
